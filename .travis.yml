sudo: required
language: python
services:
  - docker
env:
  global:
    - DOCKER_REPO=order-backend-rust
    - EB_REGION="ap-northeast-2"
    - AWS_ACCOUNT_ID: 410450153592
    - AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY
    - AWS_SECRET_ACCESS_KEY: $AWS_SECRET_KEY
    - CACHE_FOLDER=$HOME/docker-images
    - CACHE_FILE=${CACHE_FOLDER}/${DOCKER_REPO}.tgz
    - IMAGE=410450153592.dkr.ecr.ap-northeast-2.amazonaws.com/base
jobs:
  include:
    - stage: "pull image"
      script:
        - if [[ -f ${CACHE_FILE} ]]; then echo "이미지 있음.";  docker load -i ${CACHE_FILE}; else   echo "이미지 없음.";  docker pull ${IMAGE}; mkdir -p ${CACHE_FOLDER}; docker save ${IMAGE} | gzip -c > ${CACHE_FILE} fi
        - docker images 
    - stage: "build"
      script:
        - docker build -f "cargo-run.Dockerfile" -t order-backend-rust:latest  .
    - stage: "codedeploy"
      script:
        - mkdir -p zip
        - cd zip
        - cp -r ../scripts ./
        - cp -r ../appspec.yml ./
        - cp -r  ../env-example ./.env
        - zip -r api.zip . # node-koa-server 라는 이름으로 zip 파일 생성
        - cd ../
        - mkdir -p deploy # deploy 라는 디렉터리를 만듬
        - mv zip/api.zip deploy/api.zip
cache:
  bundler: true
  directories:
    - ${CACHE_FOLDER}
    - $HOME/.cache/pip
before_install:
  - pip install awscli
  - export PATH=$PATH:$HOME/.local/bin
  - aws configure set default.region ${EB_REGION}
  - $(aws ecr get-login --no-include-email)

 

#script:
#  - docker build -f "cargo-run.Dockerfile" -t order-backend-rust:latest  .
